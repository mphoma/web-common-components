export type GeneralProps ={
    headerHoverColor?: string,
    id?: string,
    automationId?: string,
    display?: string,
    overflow?: string,
    flex?: string,
    flexDirection?: string,
    margin?: string,
    border?: string,
    boxShadow?: string,
    panelTransition?: string,
    width?: string,
    isOpen?: string,
    minHeight?: string,
    minWidth?: string,
    maxHeight?: string,
    maxWidth?: string,
    backgroundColor?: string,
    contentContainerPadding?: string,
    spinnerContainerPadding?: string,
    spinnerSize?: string,
    height?: string,
    padding?: string,
    onHeaderClick?: string,
    headerColor?: string,
    headerBorder?: string,
    headerBorderBottom?: string,
    headerBackgroundColor?: string,
    headerPadding?: string,
    headerComponent?: string,
    arrowTransition?: string,
    arrowSize?: string,
    arrowColor?: string,
    arrowHoverColor?: string,
    dropDownBackgroundColor?: string,
    dropDownTransition?: string,
    dropDownPadding?: string,
    dropDownSpinnerPadding?: string,
    dropDownSpinnerSize?: string,
    rotate?: string,
    rotateX?: string,
    transition?: string,
    maxCarouselLength?: string,
    slidesPerView?: string,
    componentList?: string,
    carouselItems?: string,
    navigationGridWidth?: string,
    navigationGridHeight?: string,
    inactiveColor?: string,
    activeColor?: string,
    objectFit?: string,
    alignSelf?: string,
    onError?: any,
    fallback?: any,
    currentSlide?: string,
    fontSize?: string,
    fontFamily?: string,
    focusOutline?: string,
    focusColor?: string,
    focusFontFamily?: string,
    focusFontSize?: string,
    focusPadding?: string,
    focusCursor?: string,
    activeOpacity?: string,
    onClick?: (event: React.MouseEvent<HTMLDivElement> ) => void,
    onCloseClick?: (event: React.MouseEvent<HTMLDivElement> ) => void,
    autoFocus?: string,
    delay?: string,
    focusFocusCursor?: string,
    imageUrl?: string,
    backgroundPosition?: string,
    subHeading?: string,
    heading?: string,
    headingColor?: string,
    subHeadingColor?: string,
    children?: React.ReactNode
    borderRadius?: string,
    activeFontColor?: string,
    active?: string,
    name?: string,
    inActiveColor?: string,
    inActiveFontColor?: string,
    value?: string,
    label?: string,
    onPillClicked?: string,
    alt?: string,
    overflowY?: string,
    textPadding?: string,
    pillPadding?: string,
    pillBorder?: string,
    pillBorderRadius?: string,
    fontWeight?: string,
    pillFlex?: string,
    pillMargin?: string,
    pillBarBoxShadow?: string,
    pillBarZIndex?: string,
    pillBarPosition?: string,
    pillBarBackgroundColor?: string,
    pillBarWidth?: string,
    justifyContent?: string,
    pillBarTop?: string,
    overflowX?: string,
    src?: string,
    size?: string,
    color?: string,
    hoverColor?: string,
    now?: number,
    text?: string,
}