export type GeneralProps ={
    headerHoverColor?: string,
    id?: string | undefined,
    automationId?: string | undefined,
    display?: string | undefined,
    overflow?: string | undefined,
    flex?: string | undefined,
    flexDirection?: string | undefined,
    margin?: string | undefined,
    border?: string | undefined,
    boxShadow?: string | undefined,
    panelTransition?: string | undefined,
    width?: string | undefined,
    isOpen?: string | undefined,
    minHeight?: string | undefined,
    minWidth?: string | undefined,
    maxHeight?: string | undefined,
    maxWidth?: string | undefined,
    backgroundColor?: string | undefined,
    contentContainerPadding?: string | undefined,
    spinnerContainerPadding?: string | undefined,
    spinnerSize?: string | undefined,
    height?: string | undefined,
    padding?: string | undefined,
    onHeaderClick?: string | undefined,
    headerColor?: string | undefined,
    headerBorder?: string | undefined,
    headerBorderBottom?: string | undefined,
    headerBackgroundColor?: string | undefined,
    headerPadding?: string | undefined,
    headerComponent?: string | undefined,
    arrowTransition?: string | undefined,
    arrowSize?: string | undefined,
    arrowColor?: string | undefined,
    arrowHoverColor?: string | undefined,
    dropDownBackgroundColor?: string | undefined,
    dropDownTransition?: string | undefined,
    dropDownPadding?: string | undefined,
    dropDownSpinnerPadding?: string | undefined,
    dropDownSpinnerSize?: string | undefined,
    rotate?: string | undefined,
    rotateX?: string | undefined,
    transition?: string | undefined,
    maxCarouselLength?: string | undefined,
    slidesPerView?: string | undefined,
    componentList?: string | undefined,
    carouselItems?: string | undefined,
    navigationGridWidth?: string | undefined,
    navigationGridHeight?: string | undefined,
    inactiveColor?: string | undefined,
    activeColor?: string | undefined,
    objectFit?: string,
    alignSelf?: string,
    onError?: any,
    fallback?: any,
    currentSlide?: string,
    fontSize?: string,
    fontFamily?: string,
    focusOutline?: string,
    focusColor?: string,
    focusFontFamily?: string,
    focusFontSize?: string,
    focusPadding?: string,
    focusCursor?: string,
    activeOpacity?: string,
    onClick?: (event: React.MouseEvent<HTMLDivElement> | undefined) => void,
    autoFocus?: string,
    delay?: string,
    focusFocusCursor?: string,
    imageUrl?: string,
    backgroundPosition?: string,
    subHeading?: string,
    heading?: string,
    headingColor?: string,
    subHeadingColor?: string,
    children?: React.ReactNode
    borderRadius?: string,
    activeFontColor?: string,
    active?: string,
    name?: string,
    inActiveColor?: string,
    inActiveFontColor?: string,
    value?: string,
    label?: string,
    onPillClicked?: string,
    alt?: string,
    overflowY?: string,
    textPadding?: string,
    pillPadding?: string,
    pillBorder?: string,
    pillBorderRadius?: string,
    fontWeight?: string,
    pillFlex?: string,
    pillMargin?: string,
    pillBarBoxShadow?: string,
    pillBarZIndex?: string,
    pillBarPosition?: string,
    pillBarBackgroundColor?: string,
    pillBarWidth?: string,
    justifyContent?: string,
    pillBarTop?: string,
    overflowX?: string,
}